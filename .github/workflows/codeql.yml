name: "CodeQL"

on:
  push:
    branches: [ 'main' ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ 'main' ]
  schedule:
    - cron: '7 7 * * 0'

env:
  BUILD_TYPE: RelWithDebInfo
  BUILD_NUMBER: ${{github.run_number}}
  QT_QPA_PLATFORM: offscreen
  DEBIAN_FRONTEND: noninteractive
  DEBFULLNAME: GitHub build
  DEBEMAIL: github-action@github

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'cpp', 'python' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Install dependencies
      if: matrix.container != 'ubuntu:22.04'
      run: sudo apt update -qq && sudo apt install --no-install-recommends -y lsb-release fakeroot build-essential devscripts cdbs pkg-config cmake libpcsclite-dev libssl-dev libgtest-dev libqt5svg5-dev qttools5-dev-tools qttools5-dev

    - name: Install dependencies
      if: matrix.container == 'ubuntu:22.04'
      run: sudo apt update -qq && sudo apt install --no-install-recommends -y lsb-release fakeroot build-essential devscripts cdbs pkg-config cmake libpcsclite-dev libssl-dev libgtest-dev libgl-dev libqt6svg6-dev qt6-tools-dev qt6-tools-dev-tools qt6-l10n-tools libqt6core5compat6-dev

    - name: Ubuntu 18.04 workarounds
      if: matrix.container == 'ubuntu:18.04'
      run: |
        mkdir gtest
        cd gtest
        cmake /usr/src/gtest
        cmake --build . --target install
        sudo apt --no-install-recommends -y install clang-10
        echo "CC=clang-10" >> $GITHUB_ENV
        echo "CXX=clang++-10" >> $GITHUB_ENV

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.

        # Details on CodeQL's query packs refer to : https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
        queries: +security-and-quality

    - name: Create build directory
      run: mkdir build

    - name: Configure CMake
      working-directory: ${{github.workspace}}/build
      run: cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE ..

    - name: Build
      working-directory: ${{github.workspace}}/build
      run: |
        cmake --build . --config $BUILD_TYPE --target installer
        cp -r ../../web-eid*.* src/app

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"
